# This is a basic workflow to help you get started with Actions.

name: Copy from dev to prod

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "syn-pipelines-dev-prod" branch
  push:
    branches: [ "feature" ]
  #pull_request:
  #  branches: [ "feature" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
permissions:
      id-token: write
      contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    #runs-on: self-hosted
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Copying files from Dev to Prod directory...
        shell: pwsh
        run: |
            Get-ChildItem -Recurse | Resolve-Path -Relative
            Write-Host "-------------------------------------------1"
            Write-Host "Getting hash of prod directory before copy"
            Get-FileHash -InputStream ([IO.MemoryStream]::new([char[]]"$(Get-ChildItem .\prod -Recurse|Out-String)"))
            Write-Host "copying files..."
            $exclude = @('trigger')
            Copy-Item -Path ".\dev\*" -Exclude $exclude -destination ".\prod" -Recurse -Force
            Write-Host "Getting hash of prod directory after copy"
            Get-FileHash -InputStream ([IO.MemoryStream]::new([char[]]"$(Get-ChildItem .\prod -Recurse|Out-String)"))
            Write-Output "File copy process completed."
            Write-Host "-------------------------------------------2"
            Get-ChildItem -Recurse  | Resolve-Path -Relative
            Write-Host "-------------------------------------------3"

      - name: Debug Step 1
        run: echo "Debugging Step 1"

      - name: Setup Git for Windows' minimal SDK
        uses: git-for-windows/setup-git-for-windows-sdk@v1

      - name: Debug Step 2
        run: echo "Debugging Step 2"

      - uses: EndBug/add-and-commit@v9
        with:
          message: '[skip actions] Auto commit to version prod artifacts'
          committer_name: 'GitHub Actions'
          committer_email: 'actions@github.com'
          push: true
