# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "syn-pipelines-dev-prod" branch
  push:
    branches: [ "feature" ]
  #pull_request:
  #  branches: [ "feature" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
permissions:
      id-token: write
      contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Azure PowerShell Action
        uses: Azure/powershell@v1
        with:
          # Specify the Az PowerShell script here.
          inlineScript: |
            Get-ChildItem -Recurse
            [System.Collections.ArrayList]$E = (get-childitem -path ".\dev").name
            $E.remove("trigger")
            copy-item -path ".\dev\*" -destination ".\prod" -Recurse -Force
            Write-Output "File copy process completed."
          # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
          azPSVersion: 10.0.0
          # Select the value of the ErrorActionPreference variable for executing the script. Options: stop, continue, silentlyContinue. Default is Stop.
          errorActionPreference: Stop
          
#       - name: Copy Artifacts
#         run: |
#           $sourcePath = "${{ github.workspace }}\dev"
#           get-childitem -path $sourcePath
#           $destinationPath = "${{ github.workspace }}\prod"
#           get-childitem -path $destinationPath
#           Move-Item -Path "$sourcePath\*" -Destination $destinationPath -Force
          
          
#       - name: Run PowerShell script
#         shell: pwsh
#         run: |
#           .\copy_files.ps1
      
      
   #   - name: Create Artifacts Directory
   #     run: |
   #       New-Item -ItemType Directory -Force -Path (Join-Path ${{ github.workspace }} 'artifacts')
          
   #   - name: Copy Artifacts
   #     run: |
   #       $sourcePath = "${{ github.workspace }}\dev"
   #       $destinationPath = (Join-Path ${{ github.workspace }} 'artifacts')
   #      Copy-Item -Path "$sourcePath\*" -Destination $destinationPath -Recurse -Force
          
   #   - name: Upload Build Artifacts
   #     uses: actions/upload-artifact@v2
   #     with:
   #       name: buildlogs
   #       path: ${{ github.workspace }}\artifacts\
              
#       - name: CLI Login
#         run: |
#               az login --service-principal -u 'f55422ff-27d7-49e9-bac4-b2d08e348b1e' -p '51y8Q~Z65zXIl9VvlskSLdWF3wiqSnXgqH_yMb9f' --tenant 'd5d054a0-66ec-434f-88c2-0ac973a0dfb1'
#               az Synapse trigger list --workspace-name synprod
              
#       - name: PowerShell script
#         # You may pin to the exact commit or the version.
#         # uses: Amadevus/pwsh-script@97a8b211a5922816aa8a69ced41fa32f23477186
#         uses: Amadevus/pwsh-script@v2.0.3
#         with:
#           # PowerShell script to execute in Actions-hydrated context
#           azureSubscription: 'Free Trial'
#           ScriptType: 'FilePath'
#           script: './UpdateGlobalParameters.ps1'
#           ScriptArguments: "-globalParametersFilePath './updated_config.json' -resourceGroupName 'dinesh' -workspaceName 'synprod'"
#           azurePowerShellVersion: 'LatestVersion'
#           enabled: true
#          # globalParametersFilePath: './updated_config.json'
#          # resourceGroupName: 'dinesh'
#          # WorkspaceName: 'synprod'
              
            
        
#       - uses: Azure/synapse-workspace-deployment@V1.7.0
#         with:
#           TargetWorkspaceName: 'syn1737'
#           ArtifactsFolder: './dev'
#           environment: 'Azure Public'
#           resourceGroup: 'dinesh'
#           clientId: 'f55422ff-27d7-49e9-bac4-b2d08e348b1e'
#           clientSecret: '51y8Q~Z65zXIl9VvlskSLdWF3wiqSnXgqH_yMb9f'
#           subscriptionId: '56542616-48a1-4fd4-a9e2-947518afe39b'
#           tenantId: 'd5d054a0-66ec-434f-88c2-0ac973a0dfb1'
#           operation: 'validateDeploy'

#       - name: Generate templates
#         run: ./generate-templates.ps1

#       - name: Switch to workspace_publish branch
#         run: git checkout -B workspace_publish

#       - name: Copy templates and commit
#         run: |
#           cp -R generated-templates/* .
#           git add -A
#           git commit -m "Publish Synapse templates from GitHub Actions"

#       - name: Push templates to workspace_publish branch
#         run: git push --force origin workspace_publish
     
     # - name: Synapse workspace deployment
     #   uses: Azure/Synapse-workspace-deployment@V1.7.0
     #   with:
     #     TargetWorkspaceName: 'synprod'
     #     OverrideArmParameters: ./updated_config.json
     #     Environment: 'Azure Public'
     #     resourceGroup: 'dinesh'
     #     clientId: 'f55422ff-27d7-49e9-bac4-b2d08e348b1e'
     #     clientSecret: '51y8Q~Z65zXIl9VvlskSLdWF3wiqSnXgqH_yMb9f'
     #     subscriptionId: '56542616-48a1-4fd4-a9e2-947518afe39b'
     #     tenantId: 'd5d054a0-66ec-434f-88c2-0ac973a0dfb1'
     #     operation: 'validateDeploy'

            

     
#       - name: Install PowerShell
#         run: |
#               iex "& { $(irm https://aka.ms/install-powershell.ps1) }"
              
#       - name: Check PowerShell version
#         run: |
#           $PSVersionTable.PSVersion.ToString()
          
#       - name: Update Configuration
#         run: |
#           powershell -ExecutionPolicy Unrestricted -File ./update_script.ps1
